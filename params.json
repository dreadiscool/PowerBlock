{"name":"Powerblock","tagline":"Software anyone can script for! Simply create scripts in Notepad! Follows JavaScript syntax. Interact with Java objects via the Rhino engine!","body":"### Introducing PowerBlock\r\nPowerBlock is a server written from scratch for Minecraft classic. What sets it apart from other software its huge versatility. Thanks to the Rhino scripting engine, anyone can create scripts, or plugins, for PowerBlock in Notepad! No complicated IDE setup required! Written in Java, PowerBlock can be run on ANY Operating System, unlike other software which requires Mono, and other heavy, sluggish frameworks.\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n### Downloading PowerBlock\r\nThe latest compiled version of PowerBlock is [available here](https://dl.dropboxusercontent.com/u/29419562/PowerBlock.jar). You must create a startup file for your server, depending on what Operating System you use.\r\n```\r\nMac -> start.command\r\nWindows -> start.bat\r\nLinux -> start.sh\r\n```\r\n\r\nInside your file, write the following lines to start up the server\r\n```\r\njava -jar PowerBlock.jar\r\n```\r\n\r\nMake sure that PowerBlock.jar and your start file are in the same folder! Finally, run your start file (not the Jar file!) and if all goes well, you should see a screen with text pop up. You should also see the following folders generate: world, and plugins\r\n\r\nCongratulations! You have set up your first PowerBlock server!\r\n\r\n### Scripting in PowerBlock (Basic)\r\nPowerBlock's most powerful feature is you! With its JavaScript engine, PowerBlock can understand instructions from the most important person - you. Developers who have an advanced knowledge of code will also be entertained: the engine allows the manipulation and creation of Java objects! Let's get started\r\n\r\nAll scripts have the .js file extension (for JavaScript). Create a new file, and end it with .js. In our example, we named it TestPlugin.js\r\n\r\nHere is an example of an extremely basic script. Upon enabling, the line '[TestPlugin] Hello, world', will be printed to the console.\r\n\r\n```\r\n# name TestPlugin\r\n# author dreadiscool\r\n# version 1.0\r\n\r\nfunction onEnable() {\r\n    console.println('Hello, world!');\r\n}\r\n```\r\n\r\nPrinting messages is all well said and done, but for our script to be useful, we need to hook into some events.\r\n\r\n```\r\n# name TestPlugin\r\n# author dreadiscool\r\n# version 1.0\r\n\r\nfunction onEnable() {\r\n    console.println('Hello, world!');\r\n}\r\n\r\n// The e represents the Event object\r\nfunction onPlayerJoin(e) {\r\n    e.setJoinMessage('A player has joined!');\r\n    console.println(e.getPlayer().getUsername() + ' has connected to the server!');\r\n}\r\n```\r\n\r\nNow that we have a (somewhat) useful plugin, we want to let the entire server know about it! So let's tell them!\r\n\r\n_Previous startup code left out for brevity_\r\n\r\n```\r\nfunction onPlayerCommand(player, command, args) {\r\n    if (command == 'shout') {\r\n        $.broadcastMessage('Hey everybody, ' + player.getUsername() + ' shouted!');\r\n        return true;\r\n    }\r\n}\r\n```\r\n\r\n### Scripting in PowerBlock (advanced)\r\n_Coming Soon_","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}